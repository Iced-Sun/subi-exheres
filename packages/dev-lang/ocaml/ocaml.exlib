# Distributed under the terms of the GNU General Public License v2
# Copyright 2015      Bing Sun <subi.the.dream.walker@gmail.com>
# Copyright 2012-2013 Nicolas Braud-Santoni   <nicolas+exherbo@braud-santoni.eu>
# Copyright 2009      A Frederick Christensen <fauxmight@nosocomia.com>
# Copyright 2008      Saleem Abdulrasool      <compnerd@compnerd.org>

require flag-o-matic

SUMMARY="A general-purpose programming language, designed for safety and reliability."
DESCRIPTION="
The OCaml system is the main implementation of the OCaml language.
It features a powerful module system and a full-fledged object-oriented layer.

It comes with a native-code compiler that supports numerous architectures, for
high performance; a bytecode compiler, for increased portability;
and an interactive loop, for experimentation and rapid development.
"
HOMEPAGE="
http://caml.inria.fr/ocaml/index.en.html [[ description = [ Official homepage at Inria ] ]]
http://ocaml.org/                        [[ description = [ Community-driven website   ] ]]
"
LICENCES="|| ( LGPL-2 QPL-1.0 )"

MY_PNV=${PN}-$(ever replace 3 +)
DOWNLOADS="http://caml.inria.fr/pub/distrib/${PN}-$(ever range 1-2)/${MY_PNV}.tar.xz"
WORK="${WORKBASE}"/${MY_PNV}

BUGS_TO="fauxmight@nosocomia.com nicolas+exherbo@braud-santoni.eu"

UPSTREAM_DOCUMENTATION="http://caml.inria.fr/resources/doc/index.en.html"

MYOPTIONS="
    doc      [[ description = [ Install OCaml's manpages ] ]]
    ncurses
"

DEPENDENCIES="
    build:
      app-arch/xz

    build+run:
        ncurses? ( sys-libs/ncurses )
"

export_exlib_phases src_prepare src_configure src_compile src_install

ocaml_src_prepare() {
    # ocamlopt uses -pg. -pg and -fomit-frame-pointer conflict
    filter-flags -fomit-frame-pointer

    # multiarch
    if [[ ${FILESYSTEM_LAYOUT} == cross ]] ; then
        build="$(exhost --build)"
        host="$(exhost --target)"

        prefix=/usr/$(exhost --target)
        bindir=${prefix}/bin
        libdir=${prefix}/lib
    else
        build=${CBUILD:+${CBUILD}}
        host=${CHOST:+${CHOST}}

        prefix=/usr
        bindir=${prefix}/bin
        libdir=${prefix}/${LIBDIR:-lib}
    fi

    # respect the ocaml configure script
    edo sed -i configure -e "s|^prefix=/usr/local|prefix=${prefix}|"
    edo sed -i configure -e "s|^bindir=.*|bindir=${bindir}|"
    edo sed -i configure -e "s|^libdir=.*|libdir=${libdir}/ocaml|"
    edo sed -i configure -e "s|^mandir=.*|mandir=/usr/share/man|"
    edo sed -i configure -e "s|^host_type=unknown|host_type=${host}|"
    edo sed -i configure -e "s|^target_type=unknown|target_type=${build}|"
    edo sed -i configure -e "s|^TOOLPREF=.*|TOOLPREF=$(exhost --tool-prefix)|"

    # but it doesn't repect us
    edo sed -i asmrun/Makefile -e "s|ar rc lib|$(exhost --tool-prefix)ar rc lib|"
    edo sed -i byterun/Makefile -e "s|ar rc lib|$(exhost --tool-prefix)ar rc lib|"
    edo sed -i configure -e "s|ar rc %s|$(exhost --tool-prefix)ar rc %s|"
    edo sed -i configure -e "s|ranlib %s|$(exhost --tool-prefix)ranlib %s|"
    edo sed -i configure -e "s|ld |$(exhost --tool-prefix)ld |"
}

ocaml_src_configure() {
    ## TODO add [X] option (-x11include -x11lib)
    ## TODO add [emacs] option (make EMACSDIR= install)

    edo ${ECONF_WRAPPER} ./configure $(option ncurses || echo "-no-curses")
}

ocaml_src_compile() {
    ### ocaml Makefiles do not support parallel make

    ## build the bytecode compiler, the native-code compiler, and the bytecode compiler with the
    ## native-code compiler
    emake -j1 world.opt
}

ocaml_src_install() {
    emake -j1 DESTDIR="${IMAGE}" install

    # remove empty directory
    echo "find ${IMAGE} -iname custom -type d | xargs rmdir"
    find ${IMAGE} -iname custom -type d | xargs rmdir

    # Remove docs if needed
    option !doc && edo rm -rf "${IMAGE}"/usr/share || emagicdocs
}

